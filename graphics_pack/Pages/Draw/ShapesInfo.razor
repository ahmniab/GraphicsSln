@using System.Diagnostics
@using System.Linq;
@using System.Runtime.InteropServices.JavaScript
@inject IShapeList ShapeList
@inject NumberOfShapesState NumberOfShapesState
<h4>Shapes Info</h4>
<div class="accordion" id="accordion">
    @foreach(IShape s in ShapeList.Shapes)
    {

        <div class="accordion-item">
            <h2 class="accordion-header" id="shape_@s.GetHashCode()">
                <button class="accordion-button" 
                        type="button" data-bs-toggle="collapse" 
                        data-bs-target="#collapse_@s.GetHashCode()" 
                        aria-expanded="true" 
                        aria-controls="collapse_@s.GetHashCode()"
                        style="color: @(s?.color ?? "black")"
                        >
                    @s.name
                </button>
            </h2>
            <div id="collapse_@s.GetHashCode()" class="accordion-collapse collapse " aria-labelledby="shape_@s.GetHashCode()" data-bs-parent="#accordion">
                <div class="accordion-body">
                    
                        <div class="d-flex flex-row mb-3">
                            @switch (s.Algorithm)
                            {
                                case AlgorithmType.DDALine:
                                    <LineDDATable ShapePoints="@(s.GetIndexes())"></LineDDATable>
                                    break;
                                case AlgorithmType.BresenhamLine:
                                    <LineBresTable ShapePoints="@((s.GetIndexes() as IEnumerable<BresPointInfo>)?.ToArray() ?? [])"></LineBresTable>
                                    break;
                                case AlgorithmType.BresenhamCircle:
                                    <CircleBresTable ShapePoints="@((s.GetIndexes() as IEnumerable<BresPointInfo>)?.ToArray() ?? [])"></CircleBresTable>
                                    break;
                                case AlgorithmType.MidPointEllipse:
                                    <EllipseTable ShapePoints="@((s.GetIndexes() as IEnumerable<EllipsePointInfo>)?.ToArray() ?? [])"></EllipseTable>
                                    break;
                                default:
                                    <h4>un known algoritm</h4>
                                    break;

                            }
                            <div class="shape-preview">
                                <div>
                                    <div class="border">
                                        <img src="@s.ImgSrc"/>
                                        <img src="assets/imgs/grid-line.png"/>
                                    </div>
                                    <button class="btn btn-danger"
                                            onclick="@(new Action<object>(e => HandleDeleteShape(s)))">
                                        delete
                                    </button>
                                </div>
                            </div>


                        </div>

                    
                </div>
            </div>
        </div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        NumberOfShapesState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        NumberOfShapesState.OnChange -= StateHasChanged;
    }

    public async Task HandleDeleteShape(IShape Shape)
    {
        InvokeAsync(() => DeleteShape(Shape));
    }
    
    public void DeleteShape(IShape Shape)
    {
        Shape.DeleteImage();
        ShapeList.RemoveShape(Shape.GetHashCode());
        NumberOfShapesState.NotifyStateChanged();
    }
}